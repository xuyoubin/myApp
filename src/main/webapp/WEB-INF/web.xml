<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee   
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">
	<!-- 上下文配置 -->
	<!-- Spring view分发器 -->
	<servlet>
		<servlet-name>springMVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/springMVC.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

    <servlet-mapping>
		<servlet-name>springMVC</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	<!--<servlet>-->
		<!--<servlet-name>Faces Servlet</servlet-name>-->
		<!--<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>-->
		<!--<load-on-startup>1</load-on-startup>-->
	<!--</servlet>-->
    <!--<servlet-mapping>-->
        <!--<servlet-name>Faces Servlet</servlet-name>-->
        <!--<url-pattern>*.xhtml</url-pattern>-->
    <!--</servlet-mapping>-->
    <!--<servlet>-->
        <!--<servlet-name>Faces Servlet</servlet-name>-->
        <!--<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>-->
        <!--<load-on-startup>1</load-on-startup>-->
    <!--</servlet>-->
    <!--<servlet-mapping>-->
        <!--<servlet-name>Faces Servlet</servlet-name>-->
        <!--<url-pattern>*.xhtml</url-pattern>-->
    <!--</servlet-mapping>-->

    <context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/applicationContext.xml</param-value>
	</context-param>
	<listener>
		<description>spring listerner</description>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 区分项目名称，防止默认重名 -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>maven.example.root</param-value>
	</context-param>
	
	<!-- 加载log4j的配置文件log4j.properties -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/log4j.properties</param-value>
    </context-param>
	<!-- 60s 检测日志配置 文件变化 -->
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60000</param-value>
	</context-param>
    <context-param>
        <param-name>javax.faces.CONFIG_FILES</param-name>
        <param-value>/c3p0-config.xml,/faces-config.xml</param-value>
    </context-param>
    <!-- Spring的log4j监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<!-- 字符集 过滤器 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 路径过滤 -->
	<filter>
		<filter-name>pathFilter</filter-name>
		<filter-class>com.utils.pathFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>pathFilter</filter-name>
		<url-pattern>*.do</url-pattern>
		<!--<url-pattern>*.jsp</url-pattern>  -->
	</filter-mapping>
	<!--静态资源配置-->
	<!--<servlet-mapping>-->
		<!--<servlet-name>default</servlet-name>-->
		<!--<url-pattern>/css/*</url-pattern>-->
	<!--</servlet-mapping>-->
	

	
	<!-- 错误界面配置 -->
	<error-page>
		<error-code>404</error-code>
		<location>/jsp/tips/404.jsp</location>
	</error-page>

	<!--启动kafka配置-->
	<!--ContextLoaderListener监听器应该放在 kafka监听器之前加载，因为kafka后续会用到ServletContextEvent加载dao类
	kafka监听器启动的时候，spring还没加载，所不能用注解的方式获取类，只能通过servletContextEvent 进行类的初始化
	-->
	<!--<listener>-->
		<!--<listener-class>com.utils.kafkaUtils.KafkaConsumerListener</listener-class>-->
	<!--</listener>-->


</web-app>  